---
include:
  - path: traefik.compose.yml

# I'm storing the data for Prometheus and Grafana in named volumes rather than
# bind mounts because I don't really care about having the metrics forever, and
# the permissions are easier to manage.
volumes:
  prometheus_data:
    external: true
  grafana_data:
    external: true

services:
  # Prometheus scrapes metrics from the other services in the network and stores
  # them in a local volume. The config file is defined inline at the bottom of this
  # compose file.
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway" # Needed for cAdvisor host
    expose:
      - 9090
    labels:
      - traefik.enable=true
    deploy:
      resources:
        limits:
          memory: 512m
    depends_on:
      traefik-srv:
        condition: service_healthy

  # Currently using the standard Node Exporter dashboard and a semi-customized
  # cAdvisor dashboard. I'm not using the Synology specific dashboards at the moment
  # because I haven't revisited my SNMP setup since I moved to a new house.
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    expose:
     - 3000
    labels:
      - traefik.enable=true
    depends_on: 
      - prometheus
    deploy:
      resources:
        limits:
          memory: 256m

  # cAdvisor is a container monitoring tool that provides metrics about the
  # containers and their associated processes.
  #
  # TODO
  # This container is a resource hog and I don't really like having the root
  # filesystem mounted as a volume. I need to figure out a better way to get
  # docker / application metrics.
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro 
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    labels:
      - traefik.enable=true
    depends_on:
      traefik-srv:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256m

  # TODO
  # See if this instance can be used as a cache for the other services.
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    expose:
      - 6379
    labels:
      - traefik.enable=true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256m

# Another inline config because it's convenient.
configs:
  prometheus.yml:
    content: |
      ---
      global:
        scrape_interval: 10s
        evaluation_interval: 10s
        scrape_timeout: 10s

      scrape_configs:
        - job_name: "prometheus"
          static_configs:
            - targets: ["localhost:9090"]
          metrics_path: /metrics

        - job_name: "traefik"
          static_configs:
            - targets: ["traefik:8081"]
          metrics_path: /metrics

        - job_name: "synology-node-exporter"
          static_configs:
            - targets: ["100.70.146.118:9100"]
          metrics_path: /metrics

        - job_name: "docker-daemon"
          static_configs:
            - targets: ["host.docker.internal:9323"]
          metrics_path: /metrics

        - job_name: "cadvisor"
          static_configs:
            - targets: ["cadvisor:8080"]
          metrics_path: /metrics

